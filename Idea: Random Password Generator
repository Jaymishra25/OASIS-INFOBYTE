import random
import string
import tkinter as tk
from tkinter import messagebox

def generate_password(length, use_uppercase, use_numbers, use_symbols):
    character_set = string.ascii_lowercase  # Start with lowercase letters

    if use_uppercase:
        character_set += string.ascii_uppercase
    if use_numbers:
        character_set += string.digits
    if use_symbols:
        character_set += string.punctuation

    if length < 1:
        raise ValueError("Password length must be at least 1.")

    password = ''.join(random.choice(character_set) for _ in range(length))
    return password

def on_generate():
    try:
        length = int(length_entry.get())
        use_uppercase = uppercase_var.get()
        use_numbers = numbers_var.get()
        use_symbols = symbols_var.get()

        password = generate_password(length, use_uppercase, use_numbers, use_symbols)
        password_entry.delete(0, tk.END)
        password_entry.insert(0, password)
        root.clipboard_clear()
        root.clipboard_append(password)
        messagebox.showinfo("Password Generated", "Password copied to clipboard!")
    except ValueError as e:
        messagebox.showerror("Error", str(e))

# Create the main window
root = tk.Tk()
root.title("Password Generator")

# Create and place the widgets
tk.Label(root, text="Password Length:").grid(row=0, column=0)
length_entry = tk.Entry(root)
length_entry.grid(row=0, column=1)

uppercase_var = tk.BooleanVar()
tk.Checkbutton(root, text="Include Uppercase Letters", variable=uppercase_var).grid(row=1, columnspan=2)

numbers_var = tk.BooleanVar()
tk.Checkbutton(root, text="Include Numbers", variable=numbers_var).grid(row=2, columnspan=2)

symbols_var = tk.BooleanVar()
tk.Checkbutton(root, text="Include Symbols", variable=symbols_var).grid(row=3, columnspan=2)

tk.Button(root, text="Generate Password", command=on_generate).grid(row=4, columnspan=2)

tk.Label(root, text="Generated Password:").grid(row=5, column=0)
password_entry = tk.Entry(root)
password_entry.grid(row=5, column=1)

# Start the GUI event loop
root.mainloop()
